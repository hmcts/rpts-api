#idam:
#  s2s:
#    microservice: ${AUTH_PROVIDER_SERVICE_CLIENT_MICROSERVICE:finrem_case_orchestration}
#  s2s-auth:
#    totp_secret: ${AUTH_PROVIDER_SERVICE_CLIENT_KEY:IPLOE65ZAKMB2KWX}
#  api:
#    url: ${IDAM_API_URL:https://idam-api.aat.platform.hmcts.net}

send-letter:
  url: http://localhost:8485

idam:
  s2s-auth:
    url: ${S2S_URL:http://rpe-service-auth-provider-aat.service.core-compute-aat.internal}
    totp_secret: ${S2S_SECRET:IPLOE65ZAKMB2KWX}
    microservice: ${S2S_NAME:finrem_case_orchestration}
  client:
    id: 'bsp'
    secret: ${IDAM_CLIENT_SECRET:2QFX-7GOV-GVYN-A5CA}
    redirect_uri: http://localhost:4000/oauth2/callback
    cache:
      refresh-before-expire-in-sec: 300

server:
  port: 4000

management:
  endpoint:
    health:
      show-details: "always"
  endpoints:
    web:
      base-path: /
      exposure:
        include: health, info, prometheus

springdoc:
  packagesToScan: uk.gov.hmcts.reform.rpts.controllers

#If you use a database then uncomment below lines and update db properties accordingly
spring:
  config:
    import: "optional:configtree:/mnt/secrets/rpts/"
  application:
    name: Spring Boot Template
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://${POSTGRES_HOST:localhost}:${POSTGRES_PORT:5432}/${POSTGRES_DATABASE:javadatabase}${DB_OPTIONS:}
    username: ${POSTGRES_USERNAME:javapostgres}
    password: ${POSTGRES_PASSWORD:javapassword}
    properties:
      charSet: UTF-8
    hikari:
      minimumIdle: 2
      maximumPoolSize: 10
      idleTimeout: 10000
      poolName: RPTSHikariCP
      maxLifetime: 7200000
      connectionTimeout: 30000
  jpa:
    properties:
      hibernate:
        globally_quoted_identifiers: true
        jdbc:
          lob:
            non_contextual_creation: true

hibernate:
  show_sql=true:

dbMigration:
  # When true, the app will run DB migration on startup.
  # Otherwise, it will just check if all migrations have been applied (and fail to start if not).
  runOnStartup: ${RUN_DB_MIGRATION_ON_STARTUP:true}

os:
  key: ${OS_KEY:}
  url: https://api.os.uk/search/places/v1
  endpoint:
    postcode-search: /postcode
